/* Shader-Particles 1.0.0
 * 
 * (c) 2013 Luke Moody (http://www.github.com/squarefeet) & Lee Stemkoski (http://www.adelphi.edu/~stemkoski/)
 *     Originally based on Lee Stemkoski's original work (https://github.com/stemkoski/stemkoski.github.com/blob/master/Three.js/js/ParticleEngine.js).
 *
 * Shader-Particles may be freely distributed under the MIT license (See LICENSE.txt at root of this repository.)
 */
var SPE={distributions:{SPHERE:1,DISC:2,BOX:3},valueOverLifetimeLength:4};SPE.TypedArrayHelper=function(a,b,c,d){this.componentSize=c||1,this.size=b||1,this.TypedArrayConstructor=a||Float32Array,this.array=new a(b*this.componentSize),this.indexOffset=d||0},SPE.TypedArrayHelper.constructor=SPE.TypedArrayHelper,SPE.TypedArrayHelper.prototype.setSize=function(a,b){var c=this.array.length;return b||(a*=this.componentSize),c>a?this.shrink(a):a>c?this.grow(a):void console.info("TypedArray is already of size:",a+".","Will not resize.")},SPE.TypedArrayHelper.prototype.shrink=function(a){return this.array=this.array.subarray(0,a),this.size=a,this},SPE.TypedArrayHelper.prototype.grow=function(a){var b=this.array,c=new this.TypedArrayConstructor(a);return c.set(b),this.array=c,this.size=a,this},SPE.TypedArrayHelper.prototype.setFromTypedArray=function(a,b){var c=b.length,d=a+c;return d>this.array.length&&this.grow(d),this.array.set(b,this.indexOffset+a),this},SPE.TypedArrayHelper.prototype.setVec2=function(a,b){return this.setVec2Components(a,b.x,b.y)},SPE.TypedArrayHelper.prototype.setVec2Components=function(a,b,c){var d=this.array,e=this.indexOffset+a*this.componentSize;return d[e]=b,d[e+1]=c,this},SPE.TypedArrayHelper.prototype.setVec3=function(a,b){return this.setVec3Components(a,b.x,b.y,b.z)},SPE.TypedArrayHelper.prototype.setVec3Components=function(a,b,c,d){var e=this.array,f=this.indexOffset+a*this.componentSize;return e[f]=b,e[f+1]=c,e[f+2]=d,this},SPE.TypedArrayHelper.prototype.setVec4=function(a,b){return this.setVec4Components(a,b.x,b.y,b.z,b.w)},SPE.TypedArrayHelper.prototype.setVec4Components=function(a,b,c,d,e){var f=this.array,g=this.indexOffset+a*this.componentSize;return f[g]=b,f[g+1]=c,f[g+2]=d,f[g+3]=e,this},SPE.TypedArrayHelper.prototype.setMat3=function(a,b){return this.setFromTypedArray(this.indexOffset+a*this.componentSize,b.elements)},SPE.TypedArrayHelper.prototype.setMat4=function(a,b){return this.setFromTypedArray(this.indexOffset+a*this.componentSize,b.elements)},SPE.TypedArrayHelper.prototype.setColor=function(a,b){return this.setVec3Components(a,b.r,b.g,b.b)},SPE.TypedArrayHelper.prototype.setNumber=function(a,b){return this.array[this.indexOffset+a*this.componentSize]=b,this},SPE.TypedArrayHelper.prototype.getValueAtIndex=function(a){return this.array[this.indexOffset+a]},SPE.TypedArrayHelper.prototype.getComponentValueAtIndex=function(a){return this.array.subarray(this.indexOffset+a*this.componentSize)},SPE.ShaderAttribute=function(a,b,c){var d=SPE.ShaderAttribute.typeSizeMap;this.type="string"==typeof a&&d.hasOwnProperty(a)?a:"f",this.componentSize=d[this.type],this.arrayType=c||Float32Array,this.typedArray=null,this.bufferAttribute=null,this.dynamicBuffer=!!b},SPE.ShaderAttribute.constructor=SPE.ShaderAttribute,SPE.ShaderAttribute.typeSizeMap={f:1,v2:2,v3:3,v4:4,c:3,m3:9,m4:16},SPE.ShaderAttribute.prototype._ensureTypedArray=function(a){(null===this.typedArray||this.typedArray.size!==a*this.componentSize)&&(null!==this.typedArray&&this.typedArray.size!==a?this.typedArray.setSize(a):null===this.typedArray&&(this.typedArray=new SPE.TypedArrayHelper(this.arrayType,a,this.componentSize)))},SPE.ShaderAttribute.prototype._createBufferAttribute=function(a){return this._ensureTypedArray(a),null!==this.bufferAttribute?void(this.bufferAttribute.needsUpdate=!0):(this.bufferAttribute=new THREE.BufferAttribute(this.typedArray.array,this.componentSize),void(this.bufferAttribute.dynamic=this.dynamicBuffer))},SPE.ShaderAttribute.prototype.getLength=function(){return null===this.typedArray?0:this.typedArray.array.length},SPE.shaderChunks={defines:["#define PACKED_COLOR_SIZE 256.0","#define PACKED_COLOR_DIVISOR 255.0"].join("\n"),uniforms:["uniform float deltaTime;","uniform float runTime;","uniform sampler2D texture;"].join("\n"),attributes:["attribute vec4 acceleration;","attribute vec3 velocity;","attribute vec4 rotation;","attribute vec3 rotationCenter;","attribute vec4 params;","attribute vec4 size;","attribute vec4 angle;","attribute vec4 color;","attribute vec4 opacity;"].join("\n"),varyings:["varying vec4 vColor;","#ifdef SHOULD_ROTATE_TEXTURE","    varying float vAngle;","#endif"].join("\n"),branchAvoidanceFunctions:["float when_gt(float x, float y) {","    return max(sign(x - y), 0.0);","}","float when_lt(float x, float y) {","    return min( max(1.0 - sign(x - y), 0.0), 1.0 );","}","float when_eq( float x, float y ) {","    return 1.0 - abs( sign( x - y ) );","}","float when_ge(float x, float y) {","  return 1.0 - when_lt(x, y);","}","float when_le(float x, float y) {","  return 1.0 - when_gt(x, y);","}","float and(float a, float b) {","    return a * b;","}","float or(float a, float b) {","    return min(a + b, 1.0);","}"].join("\n"),unpackColor:["vec3 unpackColor( in float hex ) {","   vec3 c = vec3( 0.0 );","   float r = mod( (hex / PACKED_COLOR_SIZE / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );","   float g = mod( (hex / PACKED_COLOR_SIZE), PACKED_COLOR_SIZE );","   float b = mod( hex, PACKED_COLOR_SIZE );","   c.r = r / PACKED_COLOR_DIVISOR;","   c.g = g / PACKED_COLOR_DIVISOR;","   c.b = b / PACKED_COLOR_DIVISOR;","   return c;","}"].join("\n"),floatOverLifetime:["float getFloatOverLifetime( in float positionInTime, in vec4 attr ) {","    float value = 0.0;","    float deltaAge = positionInTime * float( VALUE_OVER_LIFETIME_LENGTH );","    float fIndex = 0.0;","    float shouldApplyValue = 0.0;","    for( int i = 0; i < VALUE_OVER_LIFETIME_LENGTH - 1; ++i ) {","       fIndex = float( i );","       shouldApplyValue = and( when_ge( deltaAge, fIndex ), when_lt( deltaAge, fIndex + 1.0 ) );","       value += shouldApplyValue * mix( attr[ i ], attr[ i + 1 ], deltaAge - fIndex );","    }","    return value;","}"].join("\n"),colorOverLifetime:["vec3 getColorOverLifetime( in float positionInTime, in vec3 color1, in vec3 color2, in vec3 color3, in vec3 color4 ) {","    vec3 value = vec3( 0.0 );","    value.x = getFloatOverLifetime( positionInTime, vec4( color1.x, color2.x, color3.x, color4.x ) );","    value.y = getFloatOverLifetime( positionInTime, vec4( color1.y, color2.y, color3.y, color4.y ) );","    value.z = getFloatOverLifetime( positionInTime, vec4( color1.z, color2.z, color3.z, color4.z ) );","    return value;","}"].join("\n"),paramFetchingFunctions:["float getAlive() {","   return params.x;","}","float getAge() {","   return params.y;","}","float getMaxAge() {","   return max( getAge(), params.z );","}","float getWiggle() {","   return params.w;","}"].join("\n"),forceFetchingFunctions:["vec4 getPosition( in float age ) {","   return modelViewMatrix * vec4( position, 1.0 );","}","vec3 getVelocity( in float age ) {","   return velocity * age;","}","vec3 getAcceleration( in float age ) {","   return acceleration.xyz * age;","}"].join("\n"),rotationFunctions:["#ifdef SHOULD_ROTATE_PARTICLES","   mat4 getRotationMatrix( in vec3 axis, in float angle) {","       axis = normalize(axis);","       float s = sin(angle);","       float c = cos(angle);","       float oc = 1.0 - c;","       return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,","                   oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,","                   oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,","                   0.0,                                0.0,                                0.0,                                1.0);","   }","   vec3 getRotation( in vec3 pos, in float positionInTime ) {","      vec3 axis = unpackColor( rotation.x );","      vec3 center = rotationCenter;","      vec3 translated;","      mat4 rotationMatrix;","      pos *= -1.0;","      float angle = 0.0;","      angle += when_eq( rotation.z, 0.0 ) * rotation.y;","      angle += when_gt( rotation.z, 0.0 ) * mix( 0.0, rotation.y, positionInTime * 1.35 );","      translated = rotationCenter - pos;","      rotationMatrix = getRotationMatrix( axis, angle );","      return center + vec3( rotationMatrix * vec4( translated, 1.0 ) );","   }","#endif"].join("\n"),rotateTexture:["    #ifdef SHOULD_ROTATE_TEXTURE","       float x = gl_PointCoord.x - 0.5;","       float y = gl_PointCoord.y - 0.5;","       float c = cos( vAngle );","       float s = sin( vAngle );","       vec2 rotatedUV = vec2( c * x + s * y + 0.5, c * y - s * x + 0.5 );","       vec4 rotatedTexture = texture2D( texture, rotatedUV );","    #else","       vec4 rotatedTexture = texture2D( texture, gl_PointCoord.xy );","    #endif"].join("\n")},SPE.shaders={vertex:[SPE.shaderChunks.defines,SPE.shaderChunks.uniforms,SPE.shaderChunks.attributes,SPE.shaderChunks.varyings,SPE.shaderChunks.branchAvoidanceFunctions,SPE.shaderChunks.unpackColor,SPE.shaderChunks.floatOverLifetime,SPE.shaderChunks.colorOverLifetime,SPE.shaderChunks.paramFetchingFunctions,SPE.shaderChunks.forceFetchingFunctions,SPE.shaderChunks.rotationFunctions,"void main() {","    float age = getAge();","    float alive = getAlive();","    float maxAge = getMaxAge();","    float positionInTime = (age / maxAge);","    float isAlive = when_gt( alive, 0.0 );","    #ifdef SHOULD_WIGGLE_PARTICLES","        float wiggleAmount = positionInTime * getWiggle();","        float wiggleSin = isAlive * sin( wiggleAmount );","        float wiggleCos = isAlive * cos( wiggleAmount );","    #endif","    vec3 vel = getVelocity( age );","    vec3 accel = getAcceleration( age );","    vec3 force = vec3( 0.0 );","    vec3 pos = vec3( position );","    float drag = (1.0 - (positionInTime * 0.6) * acceleration.w);","    force += vel;","    force *= drag;","    force += accel * age;","    pos += force;","    #ifdef SHOULD_WIGGLE_PARTICLES","        pos.x += wiggleSin;","        pos.y += wiggleCos;","        pos.z += wiggleSin;","    #endif","    #ifdef SHOULD_ROTATE_PARTICLES","        pos = getRotation( pos, positionInTime );","    #endif","    vec4 mvPos = modelViewMatrix * vec4( pos, 1.0 );","    float pointSize = getFloatOverLifetime( positionInTime, size ) * isAlive;","    #ifdef HAS_PERSPECTIVE","        float perspective = 300.0 / length( mvPos.xyz );","    #else","        float perspective = 1.0;","    #endif","    float pointSizePerspective = pointSize * perspective;","    #ifdef COLORIZE","    	vec3 c = isAlive * getColorOverLifetime(","    		positionInTime,","    		unpackColor( color.x ),","    		unpackColor( color.y ),","    		unpackColor( color.z ),","    		unpackColor( color.w )","    	);","    #else","    	vec3 c = vec3(1.0);","	 #endif","    float o = isAlive * getFloatOverLifetime( positionInTime, opacity );","	 vColor = vec4( c, o );","    #ifdef SHOULD_ROTATE_TEXTURE","	     vAngle = isAlive * getFloatOverLifetime( positionInTime, angle );","    #endif","	 gl_PointSize = pointSizePerspective;","	 gl_Position = projectionMatrix * mvPos;","}"].join("\n"),fragment:[SPE.shaderChunks.uniforms,SPE.shaderChunks.varyings,"void main() {","    vec3 outgoingLight = vColor.xyz;",SPE.shaderChunks.rotateTexture,"    outgoingLight = vColor.xyz * rotatedTexture.xyz;","    gl_FragColor = vec4( outgoingLight.xyz, rotatedTexture.w * vColor.w );","}"].join("\n")},SPE.utils={types:{BOOLEAN:"boolean",STRING:"string",NUMBER:"number",OBJECT:"object"},ensureTypedArg:function(a,b,c){return typeof a===b?a:c},ensureArrayTypedArg:function(a,b,c){if(Array.isArray(a)){for(var d=a.length-1;d>=0;--d)if(typeof a[d]!==b)return c;return a}return this.ensureTypedArg(a,b,c)},ensureInstanceOf:function(a,b,c){return void 0!==b&&a instanceof b?a:c},ensureArrayInstanceOf:function(a,b,c){if(Array.isArray(a)){for(var d=a.length-1;d>=0;--d)if(void 0!==b&&a[d]instanceof b==!1)return c;return a}return this.ensureInstanceOf(a,b,c)},ensureValueOverLifetimeCompliance:function(a,b,c){b=b||3,c=c||3,Array.isArray(a.value)===!1&&(a.value=[a.value]),Array.isArray(a.spread)===!1&&(a.spread=[a.spread]);var d=this.clamp(a.value.length,b,c),e=this.clamp(a.spread.length,b,c),f=Math.max(d,e);a.value=this.interpolateArray(a.value,f),a.spread=this.interpolateArray(a.spread,f)},interpolateArray:function(a,b){for(var c=[a[0]],d=(a.length-1)/(b-1),e=1;b-1>e;++e){var f=e*d,g=Math.floor(f),h=Math.ceil(f),i=f-g;c[e]=this.lerpTypeAgnostic(a[g],a[h],i)}return c.push(a[a.length-1]),c},clamp:function(a,b,c){return Math.max(b,Math.min(a,c))},lerpTypeAgnostic:function(a,b,c){var d,e=this.types;return typeof a===e.NUMBER&&typeof b===e.NUMBER?a+(b-a)*c:a instanceof THREE.Vector2&&b instanceof THREE.Vector2?(d=a.clone(),d.x=this.lerp(a.x,b.x,c),d.y=this.lerp(a.y,b.y,c),d):a instanceof THREE.Vector3&&b instanceof THREE.Vector3?(d=a.clone(),d.x=this.lerp(a.x,b.x,c),d.y=this.lerp(a.y,b.y,c),d.z=this.lerp(a.z,b.z,c),d):a instanceof THREE.Vector4&&b instanceof THREE.Vector4?(d=a.clone(),d.x=this.lerp(a.x,b.x,c),d.y=this.lerp(a.y,b.y,c),d.z=this.lerp(a.z,b.z,c),d.w=this.lerp(a.w,b.w,c),d):a instanceof THREE.Color&&b instanceof THREE.Color?(d=a.clone(),d.r=this.lerp(a.r,b.r,c),d.g=this.lerp(a.g,b.g,c),d.b=this.lerp(a.b,b.b,c),d):void console.warn("Invalid argument types, or argument types do not match:",a,b)},lerp:function(a,b,c){return a+(b-a)*c},roundToNearestMultiple:function(a,b){if(0===b)return a;var c=Math.abs(a)%b;return 0===c?a:0>a?-(Math.abs(a)-c):a+b-c},randomFloat:function(a,b){return a+b*(Math.random()-.5)},randomVector3:function(a,b,c,d,e){var f=c.x+(Math.random()*d.x-.5*d.x),g=c.y+(Math.random()*d.y-.5*d.y),h=c.z+(Math.random()*d.z-.5*d.z);e&&(f=.5*-e.x+this.roundToNearestMultiple(f,e.x),g=.5*-e.y+this.roundToNearestMultiple(g,e.y),h=.5*-e.z+this.roundToNearestMultiple(h,e.z)),a.typedArray.setVec3Components(b,f,g,h)},randomColor:function(a,b,c,d){var e=c.r+Math.random()*d.x,f=c.g+Math.random()*d.y,g=c.b+Math.random()*d.z;e=this.clamp(e,0,1),f=this.clamp(f,0,1),g=this.clamp(g,0,1),a.typedArray.setVec3Components(b,e,f,g)},randomColorAsHex:function(){var a=new THREE.Color;return function(b,c,d,e){for(var f=d.length,g=[],h=0;f>h;++h){var i=e[h];a.copy(d[h]),a.r+=Math.random()*i.x-i.x/2,a.g+=Math.random()*i.y-i.y/2,a.b+=Math.random()*i.z-i.z/2,a.r=this.clamp(a.r,0,1),a.g=this.clamp(a.g,0,1),a.b=this.clamp(a.b,0,1),g.push(a.getHex())}b.typedArray.setVec4Components(c,g[0],g[1],g[2],g[3])}}(),randomVector3OnSphere:function(a,b,c,d,e,f,g){var h=2*Math.random()-1,i=6.2832*Math.random(),j=Math.sqrt(1-h*h),k=this.randomFloat(d,e),l=0,m=0,n=0;g&&(k=Math.round(k/g)*g),l=j*Math.cos(i)*k,m=j*Math.sin(i)*k,n=h*k,l*=f.x,m*=f.y,n*=f.z,l+=c.x,m+=c.y,n+=c.z,a.typedArray.setVec3Components(b,l,m,n)},randomVector3OnDisc:function(a,b,c,d,e,f,g){var h=6.2832*Math.random(),i=Math.abs(this.randomFloat(d,e)),j=0,k=0,l=0;g&&(i=Math.round(i/g)*g),j=r*Math.cos(h)*i,k=r*Math.sin(h)*i,j*=f.x,k*=f.y,j+=c.x,k+=c.y,l+=c.z,a.typedArray.setVec3Components(b,j,k,l)},randomDirectionVector3OnSphere:function(){var a=new THREE.Vector3;return function(b,c,d,e,f,g,h,i){a.copy(g),a.x-=d,a.y-=e,a.z-=f,a.normalize().multiplyScalar(-this.randomFloat(h,i)),b.typedArray.setVec3Components(c,a.x,a.y,a.z)}}(),getPackedRotationAxis:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Color;return function(d,e){return a.copy(d).normalize(),b.copy(e).normalize(),a.x+=.5*-e.x+Math.random()*e.x,a.y+=.5*-e.y+Math.random()*e.y,a.z+=.5*-e.z+Math.random()*e.z,a.x=Math.abs(a.x),a.y=Math.abs(a.y),a.z=Math.abs(a.z),a.normalize(),c.setRGB(a.x,a.y,a.z),c.getHex()}}()},SPE.Group=function(a){var b=SPE.utils,c=b.types;a=b.ensureTypedArg(a,c.OBJECT,{}),this.uuid=THREE.Math.generateUUID(),this.fixedTimeStep=b.ensureTypedArg(a.fixedTimeStep,c.NUMBER,.016),this.texture=b.ensureInstanceOf(a.texture,THREE.Texture,null),this.hasPerspective=b.ensureTypedArg(a.hasPerspective,c.BOOLEAN,!0),this.colorize=b.ensureTypedArg(a.colorize,c.BOOLEAN,!0),this.blending=b.ensureTypedArg(a.blending,c.NUMBER,THREE.AdditiveBlending),this.transparent=b.ensureTypedArg(a.transparent,c.BOOLEAN,!0),this.alphaTest=b.ensureTypedArg(a.alphaTest,c.NUMBER,.5),this.depthWrite=b.ensureTypedArg(a.depthWrite,c.BOOLEAN,!1),this.depthTest=b.ensureTypedArg(a.depthTest,c.BOOLEAN,!0),this.fog=b.ensureTypedArg(a.fog,c.BOOLEAN,!0),this.emitters=[],this.emitterIDs=[],this._pool=[],this._poolCreationSettings=null,this._createNewWhenPoolEmpty=0,this.bufferUpdateRanges={position:{min:0,max:0},velocity:{min:0,max:0},acceleration:{min:0,max:0},params:{min:0,max:0}},this.uniforms={texture:{type:"t",value:this.texture},fogNear:{type:"f",value:10},fogFar:{type:"f",value:200},fogDensity:{type:"f",value:.5},deltaTime:{type:"f",value:0},runTime:{type:"f",value:0}},this.defines={HAS_PERSPECTIVE:this.hasPerspective,COLORIZE:this.colorize,VALUE_OVER_LIFETIME_LENGTH:SPE.valueOverLifetimeLength,SHOULD_ROTATE_TEXTURE:!1,SHOULD_ROTATE_PARTICLES:!1,SHOULD_WIGGLE_PARTICLES:!1},this.attributes={position:new SPE.ShaderAttribute("v3",!0),acceleration:new SPE.ShaderAttribute("v4",!0),velocity:new SPE.ShaderAttribute("v3",!0),rotation:new SPE.ShaderAttribute("v4"),rotationCenter:new SPE.ShaderAttribute("v3"),params:new SPE.ShaderAttribute("v4",!0),size:new SPE.ShaderAttribute("v4"),angle:new SPE.ShaderAttribute("v4"),color:new SPE.ShaderAttribute("v4"),opacity:new SPE.ShaderAttribute("v4")},this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:SPE.shaders.vertex,fragmentShader:SPE.shaders.fragment,blending:this.blending,transparent:this.transparent,alphaTest:this.alphaTest,depthWrite:this.depthWrite,depthTest:this.depthTest,defines:this.defines,fog:this.fog}),this.geometry=new THREE.BufferGeometry,this.mesh=new THREE.Points(this.geometry,this.material)},SPE.Group.constructor=SPE.Group,SPE.Group.prototype._updateDefines=function(a){this.defines.SHOULD_ROTATE_TEXTURE=this.defines.SHOULD_ROTATE_TEXTURE||!!Math.max(Math.max.apply(null,a.angle.value),Math.max.apply(null,a.angle.spread)),this.defines.SHOULD_ROTATE_PARTICLES=this.defines.SHOULD_ROTATE_PARTICLES||!!Math.max(a.rotation.angle,a.rotation.angleSpread),this.defines.SHOULD_WIGGLE_PARTICLES=this.defines.SHOULD_WIGGLE_PARTICLES||!!Math.max(a.wiggle.value,a.wiggle.spread)},SPE.Group.prototype._applyAttributesToGeometry=function(){var a,b,c=this.attributes,d=this.geometry,e=d.attributes;for(var f in c)a=c[f],(b=e[f])?b.array=a.typedArray.array:d.addAttribute(f,a.bufferAttribute)},SPE.Group.prototype.addEmitter=function(a){if(a instanceof SPE.Emitter==!1)return void console.error("`emitter` argument must be instance of SPE.Emitter. Was provided with:",a);if(this.emitterIDs.indexOf(a.uuid)>-1)return void console.warn("Emitter already exists in this group. Will not add again.");console.time("SPE.Group.prototype.addEmitter");var b=this.attributes,c=b.position.getLength()/3,d=c+a.particleCount,e=SPE.utils;a._calculatePPSValue(a.maxAge.value+a.maxAge.spread),a.attributeOffset=c,a.activationIndex=c,a.attributes=this.attributes;for(var f in b)b[f]._createBufferAttribute(d);for(var g,h,i=c;d>i;++i)g=i-c,h=g/a.particlesPerSecond,a._assignPositionValue(i),a._assignVelocityValue(i),a._assignAccelerationValue(i),b.size.typedArray.setVec4Components(i,Math.abs(e.randomFloat(a.size.value[0],a.size.spread[0])),Math.abs(e.randomFloat(a.size.value[1],a.size.spread[1])),Math.abs(e.randomFloat(a.size.value[2],a.size.spread[2])),Math.abs(e.randomFloat(a.size.value[3],a.size.spread[3]))),b.angle.typedArray.setVec4Components(i,e.randomFloat(a.angle.value[0],a.angle.spread[0]),e.randomFloat(a.angle.value[1],a.angle.spread[1]),e.randomFloat(a.angle.value[2],a.angle.spread[2]),e.randomFloat(a.angle.value[3],a.angle.spread[3])),b.params.typedArray.setVec4Components(i,0,0,Math.abs(e.randomFloat(a.maxAge.value,a.maxAge.spread)),e.randomFloat(a.wiggle.value,a.wiggle.spread)),e.randomColorAsHex(b.color,i,a.color.value,a.color.spread),b.opacity.typedArray.setVec4Components(i,Math.abs(e.randomFloat(a.opacity.value[0],a.opacity.spread[0])),Math.abs(e.randomFloat(a.opacity.value[1],a.opacity.spread[1])),Math.abs(e.randomFloat(a.opacity.value[2],a.opacity.spread[2])),Math.abs(e.randomFloat(a.opacity.value[3],a.opacity.spread[3]))),b.rotation.typedArray.setVec3Components(i,e.getPackedRotationAxis(a.rotation.axis,a.rotation.axisSpread),e.randomFloat(a.rotation.angle,a.rotation.angleSpread),a.rotation.static?0:1),b.rotationCenter.typedArray.setVec3(i,a.rotation.center);return this._applyAttributesToGeometry(),this.emitters.push(a),this.emitterIDs.push(a.uuid),this._updateDefines(a),this.material.needsUpdate=!0,console.timeEnd("SPE.Group.prototype.addEmitter"),this},SPE.Group.prototype.removeEmitter=function(a){var b=this.emitterIDs.indexOf(a.uuid);if(a instanceof SPE.Emitter==!1)return void console.error("`emitter` argument must be instance of SPE.Emitter. Was provided with:",a);if(-1===b)return void console.warn("Emitter does not exist in this group. Will not remove.");for(var c=a.attributeOffset,d=c+a.particleCount,e=this.attributes.params.typedArray,f=c;d>f;++f)e.array[4*f]=0,e.array[4*f+1]=0;this.emitters.splice(b,1),this.emitterIDs.splice(b,1),this.attributes.params.bufferAttribute.updateRange.count=-1,this.attributes.params.bufferAttribute.needsUpdate=!0},SPE.Group.prototype._updateUniforms=function(a){this.uniforms.runTime.value+=a,this.uniforms.deltaTime.value=a},SPE.Group.prototype.tick=function(a){var b=this.emitters,c=b.length,d=a||this.fixedTimeStep,e=this.bufferUpdateRanges;if(0!==c){this._updateUniforms(d);for(var f=0;c>f;++f)b[f].tick(d),e.params.min=Math.min(e.params.min,b[f].bufferUpdateRanges.params.min),e.params.max=Math.max(e.params.max,b[f].bufferUpdateRanges.params.max);this.attributes.params.bufferAttribute.updateRange.offset=e.params.min,this.attributes.params.bufferAttribute.updateRange.count=e.params.max-e.params.min+4,this.attributes.params.bufferAttribute.needsUpdate=!0}},SPE.Group.prototype.getFromPool=function(){var a=this,b=a._pool,c=a._createNewWhenPoolEmpty;return b.length?b.pop():c?new SPE.Emitter(a._poolCreationSettings):null},SPE.Group.prototype.releaseIntoPool=function(a){return a instanceof SPE.Emitter?(a.reset(),this._pool.unshift(a),this):void console.error("Will not add non-emitter to particle group pool:",a)},SPE.Group.prototype.getPool=function(){return this._pool},SPE.Group.prototype.addPool=function(a,b,c){var d,e=this;e._poolCreationSettings=b,e._createNewWhenPoolEmpty=!!c;for(var f=0;a>f;++f)d=new SPE.Emitter(b),e.addEmitter(d),e.releaseIntoPool(d);return e},SPE.Group.prototype._triggerSingleEmitter=function(a){var b=this,c=b.getFromPool();return null===c?void console.log("SPE.Group pool ran out."):(a instanceof THREE.Vector3&&c.position.value.copy(a),c.enable(),setTimeout(function(){c.disable(),b.releaseIntoPool(c)},c.maxAge.value+c.maxAge.spread),b)},SPE.Group.prototype.triggerPoolEmitter=function(a,b){var c=this;if("number"==typeof a&&a>1)for(var d=0;a>d;++d)c._triggerSingleEmitter(b);else c._triggerSingleEmitter(b);return c},SPE.Emitter=function(a){var b=SPE.utils,c=b.types,d=SPE.valueOverLifetimeLength;a=b.ensureTypedArg(a,c.OBJECT,{}),a.position=b.ensureTypedArg(a.position,c.OBJECT,{}),a.velocity=b.ensureTypedArg(a.velocity,c.OBJECT,{}),a.acceleration=b.ensureTypedArg(a.acceleration,c.OBJECT,{}),a.radius=b.ensureTypedArg(a.radius,c.OBJECT,{}),a.drag=b.ensureTypedArg(a.drag,c.OBJECT,{}),a.rotation=b.ensureTypedArg(a.rotation,c.OBJECT,{}),a.color=b.ensureTypedArg(a.color,c.OBJECT,{}),a.opacity=b.ensureTypedArg(a.opacity,c.OBJECT,{}),a.size=b.ensureTypedArg(a.size,c.OBJECT,{}),a.angle=b.ensureTypedArg(a.angle,c.OBJECT,{}),a.wiggle=b.ensureTypedArg(a.wiggle,c.OBJECT,{}),a.maxAge=b.ensureTypedArg(a.maxAge,c.OBJECT,{}),this.uuid=THREE.Math.generateUUID(),this.type=b.ensureTypedArg(a.type,c.NUMBER,SPE.distributions.BOX),this.position={value:b.ensureInstanceOf(a.position.value,THREE.Vector3,new THREE.Vector3),spread:b.ensureInstanceOf(a.position.spread,THREE.Vector3,new THREE.Vector3),spreadClamp:b.ensureInstanceOf(a.position.spreadClamp,THREE.Vector3,new THREE.Vector3),distribution:b.ensureTypedArg(a.position.distribution,c.NUMBER,this.type)},this.velocity={value:b.ensureInstanceOf(a.velocity.value,THREE.Vector3,new THREE.Vector3),spread:b.ensureInstanceOf(a.velocity.spread,THREE.Vector3,new THREE.Vector3),distribution:b.ensureTypedArg(a.velocity.distribution,c.NUMBER,this.type)},this.acceleration={value:b.ensureInstanceOf(a.acceleration.value,THREE.Vector3,new THREE.Vector3),spread:b.ensureInstanceOf(a.acceleration.spread,THREE.Vector3,new THREE.Vector3),distribution:b.ensureTypedArg(a.acceleration.distribution,c.NUMBER,this.type)},this.radius={value:b.ensureTypedArg(a.radius.value,c.NUMBER,10),spread:b.ensureTypedArg(a.radius.spread,c.NUMBER,0),spreadClamp:b.ensureTypedArg(a.radius.spreadClamp,c.NUMBER,0),scale:b.ensureInstanceOf(a.radius.scale,THREE.Vector3,new THREE.Vector3(1,1,1))},this.drag={value:b.ensureTypedArg(a.drag.value,c.NUMBER,0),spread:b.ensureTypedArg(a.drag.spread,c.NUMBER,0)},this.wiggle={value:b.ensureTypedArg(a.wiggle.value,c.NUMBER,0),spread:b.ensureTypedArg(a.wiggle.spread,c.NUMBER,0)},this.rotation={axis:b.ensureInstanceOf(a.rotation.axis,THREE.Vector3,new THREE.Vector3(0,1,0)),axisSpread:b.ensureInstanceOf(a.rotation.axisSpread,THREE.Vector3,new THREE.Vector3),angle:b.ensureTypedArg(a.rotation.angle,c.NUMBER,0),angleSpread:b.ensureTypedArg(a.rotation.angleSpread,c.NUMBER,0),"static":b.ensureTypedArg(a.rotation.static,c.BOOLEAN,!1),center:b.ensureInstanceOf(a.rotation.center,THREE.Vector3,this.position.value)},this.maxAge={value:b.ensureTypedArg(a.maxAge.value,c.NUMBER,2),spread:b.ensureTypedArg(a.maxAge.spread,c.NUMBER,0)},this.color={value:b.ensureArrayInstanceOf(a.color.value,THREE.Color,new THREE.Color),spread:b.ensureArrayInstanceOf(a.color.spread,THREE.Vector3,new THREE.Vector3)},this.opacity={value:b.ensureArrayTypedArg(a.opacity.value,c.NUMBER,1),spread:b.ensureArrayTypedArg(a.opacity.spread,c.NUMBER,0)},this.size={value:b.ensureArrayTypedArg(a.size.value,c.NUMBER,1),spread:b.ensureArrayTypedArg(a.size.spread,c.NUMBER,0)},this.angle={value:b.ensureArrayTypedArg(a.angle.value,c.NUMBER,0),spread:b.ensureArrayTypedArg(a.angle.spread,c.NUMBER,0)},this.particleCount=b.ensureTypedArg(a.particleCount,c.NUMBER,100),this.duration=b.ensureTypedArg(a.duration,c.NUMBER,null),this.isStatic=b.ensureTypedArg(a.isStatic,c.BOOLEAN,!1),this.activeMultiplier=b.ensureTypedArg(a.activeMultiplier,c.NUMBER,1),this.particlesPerSecond=0,this.activationIndex=0,this.alive=!0,this.age=0,this.resetFlags={position:b.ensureTypedArg(a.position.randomise,c.BOOLEAN,!!a.position.spread&&!!a.position.spread.lengthSq()),velocity:b.ensureTypedArg(a.velocity.randomise,c.BOOLEAN,!!a.velocity.spread&&!!a.velocity.spread.lengthSq()),acceleration:b.ensureTypedArg(a.acceleration.randomise,c.BOOLEAN,!!a.acceleration.spread&&!!a.acceleration.spread.lengthSq())},this.bufferUpdateRanges={position:{min:0,max:0},velocity:{min:0,max:0},acceleration:{min:0,max:0},params:{min:0,max:0}},b.ensureValueOverLifetimeCompliance(this.color,d,d),b.ensureValueOverLifetimeCompliance(this.opacity,d,d),b.ensureValueOverLifetimeCompliance(this.size,d,d),b.ensureValueOverLifetimeCompliance(this.angle,d,d)},SPE.Emitter.constructor=SPE.Emitter,SPE.Emitter.prototype._calculatePPSValue=function(a){var b=this.particleCount;this.particlesPerSecond=this.duration?b/(a<this.duration?a:this.duration):b/a},SPE.Emitter.prototype._assignPositionValue=function(a){var b=SPE.distributions,c=SPE.utils,d=this.position,e=this.attributes.position,f=d.value,g=d.spread,h=d.distribution;switch(h){case b.BOX:c.randomVector3(e,a,f,g,d.spreadClamp);break;case SPE.distributions.SPHERE:c.randomVector3OnSphere(e,a,f,this.radius.value,this.radius.spread,this.radius.scale,this.radius.spreadClamp)}},SPE.Emitter.prototype._assignVelocityValue=function(a){var b,c,d,e=SPE.distributions,f=SPE.utils,g=this.velocity,h=g.value,i=g.spread,j=g.distribution;switch(j){case e.BOX:f.randomVector3(this.attributes.velocity,a,h,i);break;case SPE.distributions.SPHERE:b=this.attributes.position.typedArray.array[3*a],c=this.attributes.position.typedArray.array[3*a+1],d=this.attributes.position.typedArray.array[3*a+2],f.randomDirectionVector3OnSphere(this.attributes.velocity,a,b,c,d,this.position.value,this.velocity.value.x,this.velocity.spread.x)}},SPE.Emitter.prototype._assignAccelerationValue=function(a){var b,c,d,e=SPE.distributions,f=SPE.utils,g=this.acceleration,h=g.value,i=g.spread,j=g.distribution;switch(j){case e.BOX:f.randomVector3(this.attributes.acceleration,a,h,i);break;case SPE.distributions.SPHERE:b=this.attributes.position.typedArray.array[3*a],c=this.attributes.position.typedArray.array[3*a+1],d=this.attributes.position.typedArray.array[3*a+2],f.randomDirectionVector3OnSphere(this.attributes.acceleration,a,b,c,d,this.position.value,this.acceleration.value.x,this.acceleration.spread.x)}var k=f.clamp(f.randomFloat(this.drag.value,this.drag.spread),0,1);this.attributes.acceleration.typedArray.array[4*a+3]=k},SPE.Emitter.prototype._updateBuffers=function(){var a,b=this.resetFlags,c=this.bufferUpdateRanges,d=this.attributes,e=0;b.position===!0&&(e=c.position.max-c.position.min,a=d.position.bufferAttribute,0!==e&&(a.offset=c.position.min,a.count=e+3,a.dynamic=!0,a.needsUpdate=!0,c.position.min=0,c.position.max=0)),b.velocity===!0&&(e=c.velocity.max-c.velocity.min,a=d.velocity.bufferAttribute,0!==e&&(a.offset=c.velocity.min,a.count=e+3,a.dynamic=!0,a.needsUpdate=!0,c.velocity.min=0,c.velocity.max=0)),b.acceleration===!0&&(e=c.acceleration.max-c.acceleration.min,a=d.acceleration.bufferAttribute,0!==e&&(a.offset=c.acceleration.min,a.count=e+4,a.dynamic=!0,a.needsUpdate=!0,c.acceleration.min=0,c.acceleration.max=0))},SPE.Emitter.prototype._resetParticle=function(a){var b,c=this.resetFlags,d=this.bufferUpdateRanges;c.position===!0&&(b=d.position,this._assignPositionValue(a),b.min=Math.min(b.min,3*a),b.max=Math.max(b.max,3*a),this.attributes.position.bufferAttribute.needsUpdate=!0),c.velocity===!0&&(b=d.velocity,this._assignVelocityValue(a),b.min=Math.min(b.min,3*a),b.max=Math.max(b.max,3*a),this.attributes.velocity.bufferAttribute.needsUpdate=!0),c.acceleration===!0&&(b=d.acceleration,this._assignAccelerationValue(a),b.min=Math.min(b.min,4*a),b.max=Math.max(b.max,4*a),this.attributes.acceleration.bufferAttribute.needsUpdate=!0)},SPE.Emitter.prototype.tick=function(a){if(!this.isStatic){for(var b,c,d,e,f=this.attributeOffset,g=f+this.particleCount,h=this.attributes.params.typedArray.array,i=this.particlesPerSecond*this.activeMultiplier*a,j=this.activationIndex,k=0,l=0,m=this.bufferUpdateRanges.params,n=g-1;n>=f;--n)b=4*n,e=h[b],1===e&&(d=h[b+1],c=h[b+2],d+=a,d>c&&(d=0,e=0,this._resetParticle(n)),k=Math.min(k,b),l=Math.max(l,b),h[b]=e,h[b+1]=d);if(this.alive===!1)return m.min=k,m.max=l,void(this.age=0);null!==this.duration&&this.age>this.duration&&(this.alive=!1,this.age=0);for(var b,o=0|j,p=o+i,q=p-this.activationIndex+1|0,r=q>0?a/q:0,n=o;p>n;++n)b=4*n,0===h[b]&&(h[b]=1,h[b+1]=r*(n-o),k=Math.min(k,b),l=Math.max(l,b));this.activationIndex+=i,this.activationIndex>g&&(this.activationIndex=f),this.age+=a,this._updateBuffers(),m.min=k,m.max=l}},SPE.Emitter.prototype.reset=function(a){if(this.age=0,this.alive=!1,a===!0){for(var b,c=this.attributeOffset,d=c+this.particleCount,e=this.attributes.params.typedArray.array,f=this.attributes.params.bufferAttribute,g=d-1;g>=c;--g)b=4*g,e[b]=0,e[b+1]=0;f.updateRange.offset=0,f.updateRange.count=-1,f.needsUpdate=!0}},SPE.Emitter.prototype.enable=function(){this.alive=!0},SPE.Emitter.prototype.disable=function(){this.alive=!1};